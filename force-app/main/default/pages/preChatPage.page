<apex:page showHeader="false">

  <head>
    <meta charset="utf-8" />
    <apex:includeScript value="https://cdn.ckeditor.com/4.4.7/standard/ckeditor.js"/>
    <!-- Bootstrap core CSS -->
    <apex:stylesheet value="{!URLFOR($Resource.Bootstrap, 'css/bootstrap.min.css')}" /> 
    <style>
    /*This is modifying the btn-primary colors but you could create your own .btn-something class as well*/
    .btn-primary {
      color: #ffffff;
       
      background-repeat: none;
    }
    .btn-primary:hover, .btn-primary:focus, .btn-primary:active, .btn-primary.active {
      color: #ffffff;
      background-image: none;
      background-color: #ff0000;
    }
    </style>
  </head>

<!-- This script takes the endpoint URL parameter passed from the deployment page and makes it the action for the form -->
<script type='text/javascript'> 
 
(function() {
    function handlePageLoad() {
        var endpointMatcher = new RegExp("[\\?\\&]endpoint=([^&#]*)");
        var domainMatcher = new RegExp("(https?:\\/\\/(.+?\\.)?(salesforce|salesforceliveagent)\\.com(\\/[A-Za-z0-9\\-\\._~:\\/\\?#\[\\]@!$&'\\(\\)\*\\+,;\\=]*)?)");

        var endpointAttr = endpointMatcher.exec(document.location.search)[1];
        // if the endpoint domain is valid
        if (domainMatcher.test(decodeURIComponent(endpointAttr))) {
            document.getElementById('prechatForm').setAttribute('action',
                decodeURIComponent(endpointAttr.replace("javascript:", "")));
        } else {
            // invalid endpoint domain, set the action to empty
            console.error("invalid domain: " + endpointAttr);
            document.getElementById('prechatForm').setAttribute('action', "");
        }
    }
    if (window.addEventListener) {
        window.addEventListener('load', handlePageLoad, false);
    } else {
        window.attachEvent('onload', handlePageLoad, false);
    }
})();
</script>
<body>
<div class="container bg-white">
<!-- Form that gathers information from the chat visitor and sets the values to Live Agent Custom Details used later in the example -->
<form method='post' id='prechatForm' styleClass="form-horizontal">
<div class="form-group row"> 
  <div class="col-sm-12 ">
  
  <h6>
    <span class="text-muted">To start, tell us about yourself...</span>
  </h6>
  </div>
</div>
<br/><br/>
<!-- map: Use the data from prechat form to map it to the Salesforce record's fields -->
<input type="hidden" name="liveagent.prechat.findorcreate.map:Contact" value="FirstName,ContactFirstName;LastName,ContactLastName;Email,ContactEmail;Phone,ContactPhone" />





<div class="form-group row"> 
  <label class="col-sm-4 col-form-label" for="fName">First Name</label>
  <div class="col-sm-5 ">
    <input type="text" name="liveagent.prechat:ContactFirstName" id="firstName" class="form-control input-sm" />
  </div><br/>
</div>
<div class="form-group row">      
  <label class="col-sm-4 col-form-label" for="lastName">Last Name</label>
  <div class="col-sm-5 ">
    <input type="text" name="liveagent.prechat:ContactLastName" id="lastName" class="form-control input-sm" required="true" />
  </div>
</div>

<div class="form-group row"> 
  <label class="col-sm-4 col-form-label" for="email">Email</label>
  <div class="col-sm-5 ">
    <input type="text" name="liveagent.prechat:ContactEmail" id="email" class="form-control input-sm" required="true" />
  </div><br/>
</div>

  <div class="form-group row"> 
<label class="col-sm-4 col-form-label" for="mls">Issue Type</label>
  <div class="col-sm-5 ">
<select>
  <option value="Billing">Login issue</option>
  <option value="Contact Information">Payment issue</option>
  

</select>
</div>
</div>


<div class="form-group row"> 
<!-- Hidden fields used to set additional custom details -->
    <input type="hidden" name="liveagent.prechat:CaseStatus" value="New" /><br />
    
    <!-- This example assumes that "Chat" was added as picklist value to the Case Origin field -->
    <input type="hidden" name="liveagent.prechat:CaseOrigin" value="Chat" /><br />
    
    <!-- This example will set the Case Record Type to a specific value for the record type configured on the org. Lookup the case record type's id on your org and set it here -->
    <input type="hidden" name="liveagent.prechat:CaseRecordType" value="012j0000000PMBc" />
    
    <!-- Used to set the visitor's name for the agent in the Console -->
    <input type="hidden" name="liveagent.prechat.name" id="prechat_field_name" />

<!-- map: Use the data from prechat form to map it to the Salesforce record's fields -->
<input type="hidden" name="liveagent.prechat.findorcreate.map:Contact" value="FirstName,ContactFirstName;LastName,ContactLastName;Email,ContactEmail;Phone,ContactPhone" />

<input type="hidden" name="liveagent.prechat.findorcreate.map:Case" value="Subject,CaseSubject;Status,CaseStatus;Origin,CaseOrigin;RecordTypeId,CaseRecordType" />

<!-- doFind, doCreate and isExactMatch example for a Contact: 
    Find a contact whose Email exactly matches the value provided by the customer in the form 
    If there's no match, then create a Contact record and set it's First Name, Last Name, Email, and Phone to the values provided by the customer -->
<input type="hidden" name="liveagent.prechat.findorcreate.map.doFind:Contact" value="Email,true" />
<input type="hidden" name="liveagent.prechat.findorcreate.map.isExactMatch:Contact" value="Email,true" />
<input type="hidden" name="liveagent.prechat.findorcreate.map.doCreate:Contact" value="FirstName,true;LastName,true;Email,true;Phone,true" />


<input type="hidden" name="liveagent.prechat.findorcreate.map.doFind:Account" value="MLS_Brokerage_Id__c,true" />
<input type="hidden" name="liveagent.prechat.findorcreate.map.isExactMatch:Account" value="MLS_Brokerage_Id__c,true" />

<!-- doCreate example for a Case: create a case to attach to the chat, set the Case Subject to the value provided by the customer and set the case's Status and Origin fields -->
<input type="hidden" name="liveagent.prechat:Subject" value="Listing Issue" />
<input type="hidden" name="liveagent.prechat.findorcreate.map:Case" value="Subject,CaseSubject;Status,CaseStatus;Origin,CaseOrigin;RecordTypeId,CaseRecordType" />

<input type="hidden" name="liveagent.prechat.findorcreate.map.doCreate:Case" value="Subject,true;Status,true;Origin,true;RecordTypeId,true" />

<!-- linkToEntity: Set the record Contact record, found/created above, as the Contact on the Case that's created --> 
<input type="hidden" name="liveagent.prechat.findorcreate.linkToEntity:Contact" value="Case,ContactId" />
<input type="hidden" name="liveagent.prechat.findorcreate.linkToEntity:Account" value="Case,AccountId" />

<!-- showOnCreate: Open the Contact and Case records as sub-tabs to the chat for the agent in the Console -->
<input type="hidden" name="liveagent.prechat.findorcreate.showOnCreate:Contact" value="true" />
<input type="hidden" name="liveagent.prechat.findorcreate.showOnCreate:Case" value="true" />

<!-- saveToTranscript: Associates the records found / created, i.e. Contact and Case, to the Live Chat Transcript record. --> 
<input type="hidden" name="liveagent.prechat.findorcreate.saveToTranscript:Contact" value="ContactId" />
<input type="hidden" name="liveagent.prechat.findorcreate.saveToTranscript:Case" value="CaseId" />

<!-- displayToAgent: Hides the case record type from the agent -->
<input type="hidden" name="liveagent.prechat.findorcreate.displayToAgent:CaseRecordType" value="false" />

<!-- Form that gathers information from the chat visitor and sets the values to Live Agent Custom Details -->
<input type="hidden" name= "liveagent.prechat.save:ContactFirstName" value= "FirstName__c" />
<input type="hidden" name= "liveagent.prechat.save:ContactLastName" value="LastName__c" />
<input type="hidden" name= "liveagent.prechat.save:ContactEmail" value="Email__c" />

<!-- searchKnowledge: Searches knowledge article based on the text, this assumes that Knowledge is setup -->
<input type="hidden" name="liveagent.prechat.knowledgeSearch:CaseSubject" value="true" />
</div>

<br/><br/>
<input type="submit" class="btn-primary btn-block" value="Let's Chat" id='prechat_submit' onclick="setName()"/>

<!-- Set the visitor's name for the agent in the Console to first and last name provided by the customer -->
<script type="text/javascript">
   function setName() {
    document.getElementById("prechat_field_name").value =  
        document.getElementById("firstName").value + " " + document.getElementById("lastName").value;
    }
</script>

</form>
</div>
</body>
</apex:page>